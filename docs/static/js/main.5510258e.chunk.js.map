{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","respuesta","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAEZC,mBAAS,IAFG,mBAEzCC,EAFyC,KAE7BC,EAF6B,KAmBhD,OACQ,0BAAMC,SAZO,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,OAQV,2BACIO,KAAO,OACPC,MAAUT,EACVU,SApBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YCNlBG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IACrC,OACI,yBAAKC,UAAY,0CACb,yBAAKC,IAAOF,EAAMG,IAAQJ,IAC1B,2BAAKA,K,uBCNJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,iDACoCO,UAAUF,GAD9C,+DAEKG,MAAOR,GAFZ,cAEbS,EAFa,gBAGIA,EAAUC,OAHd,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAO,IAAD,EACzB,MAAM,CACFhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QATvB,kBAaZY,GAbY,4CAAH,sDCMPK,EAAU,SAAC,GAAoB,IAAjBZ,EAAgB,EAAhBA,SAAgB,ECDf,SAAEA,GAAe,IAAD,EACdrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAH2B,mBACjCC,EADiC,KAC1BC,EAD0B,KAyBxC,OAnBAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GAECH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAI1B,CAACb,IASGc,EDP0BK,CAAcnB,GAAlCU,EAjB0B,EAiB/BJ,KAAaO,EAjBkB,EAiBlBA,QAIrB,OACI,oCACA,wBAAIjB,UAAU,qCAAd,IAAqDI,EAArD,KAEEa,GAAW,uBAAGjB,UAAU,oCAAb,cAEb,yBAAKA,UAAY,aAETc,EAAOF,KAAK,SAAAC,GAAG,OACT,kBAAC,EAAD,eACEW,IAAQX,EAAIhB,IACPgB,UElChBY,EAAe,WAAM,MAWM1C,mBAAS,CAAC,cAXhB,mBAWvB2C,EAXuB,KAWX5C,EAXW,KAc9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAkBA,IAC/B,6BAIA,4BAEQ4C,EAAWd,KAAK,SAAAR,GAAQ,OAEpB,kBAAC,EAAD,CACIoB,IAAQpB,EACRA,SAAaA,U,MC1BzCuB,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.5510258e.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ( { setCategories } ) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value)\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if( inputValue.trim().length > 2 ){\r\n            setCategories( cats => [ inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n            <form onSubmit = { handleSubmit }>\r\n                <input \r\n                    type = \"text\"\r\n                    value = { inputValue }\r\n                    onChange = { handleInputChange }\r\n                />\r\n            </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id, title, url} ) => {\r\n    return (\r\n        <div className = \"card animate__animated animate__fadeIn\">\r\n            <img src= { url } alt = { title } />\r\n            <p>{ title }</p> \r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=3beuJcVz6LUmwUqY2Ce34HfLRVYd416M`;\r\n    const respuesta = await fetch( url );\r\n    const { data } = await respuesta.json();\r\n\r\n    const gifs = data.map( img =>{\r\n        return{\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n\r\n    return gifs;\r\n\r\n}","// import React, { useState, useEffect } from 'react';\r\nimport React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ( { category } ) => {\r\n\r\n    // const [images, setImages] = useState([]);\r\n\r\n    // Cuando recargas la pagina con un boton que suma por ejemplo\r\n    // la lista se cargaria todo el rato. Con el useEffect\r\n    // y el [] vacio como argumento, solo carga una vez\r\n\r\n    // useEffect( () => {\r\n    //     // getGifs();\r\n    //     getGifs(category)\r\n    //         .then( imgs => setImages(imgs));\r\n    // }, [ category ] );\r\n\r\n    // Esto es un custom hook, lo de arriba es la manera inicial\r\n    // en que se hizo todo.\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\" > {category} </h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\" >Loading...</p> }\r\n\r\n        <div className = \"card-grid\">            \r\n              {\r\n                images.map( img => (\r\n                      <GifGridItem \r\n                        key = { img.id }\r\n                        { ...img }\r\n                      />\r\n                ) )\r\n              }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                // setTimeout( () => {\r\n                    setstate({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                // }, 1500);\r\n            })\r\n    }, [category]);\r\n\r\n    // setTimeout( () => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000)\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    // const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    // const [categories, setCategories] = useState(['One Punch', 'Samurai X', 'Dragon Ball'])\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( [...categories, 'HunterXHunter'] );\r\n    //     // setCategories( ['HunterXHunter', ...categories] );\r\n    // }\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick= { handleAdd }>Agregar</button> */}\r\n\r\n            <ul>\r\n                {\r\n                    categories.map( category =>(\r\n                        // <li key={ category }>{ category }</li>\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ul>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp } from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}